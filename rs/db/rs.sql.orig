SET SQL DIALECT 3;

CREATE DATABASE 'RS' PAGE_SIZE 4096 DEFAULT CHARACTER SET ISO8859_1;

/* Table: COLOR_SCHEME, Owner: SYSDBA */

CREATE TABLE "COLOR_SCHEME" 
(
  "SCHEMEID"	 INTEGER NOT NULL,
  "BACKGROUND"	 INTEGER,
  "FONT"	 INTEGER,
  "BORDER"	 INTEGER,
CONSTRAINT "PKCOLOR_SCHEME" PRIMARY KEY ("SCHEMEID")
);

/* Table: DEL$RESERVAS, Owner: SYSDBA */

CREATE TABLE "DEL$RESERVAS" 
(
  "RESERVAID"	 INTEGER,
  "SEQ"	 INTEGER NOT NULL,
  "DATA_DEL"	 DATE DEFAULT CURRENT_DATE
);

/* Table: RESERVAS, Owner: SYSDBA */

CREATE TABLE "RESERVAS" 
(
  "RESERVAID"	 INTEGER NOT NULL,
  "TIPO"     CHAR(1) NOT NULL,
  "SALAID"	 INTEGER NOT NULL,
  "USUARIOID"	 INTEGER NOT NULL,
  "ASSUNTO"	 VARCHAR(255) NOT NULL,
  "DEPTO"	 VARCHAR(80),
  "NOTAS"	 BLOB SUB_TYPE TEXT SEGMENT SIZE 80,
  "SEQ"	 INTEGER,
CONSTRAINT "PKRESERVAS" PRIMARY KEY ("RESERVAID")
);

CREATE TABLE "RESERVA_SIMPLES"
(
  "RESERVAID" INTEGER NOT NULL,
  "DATA"    DATE NOT NULL,
  "HORAIN"	 TIME NOT NULL,
  "HORAFIM"	 TIME NOT NULL
);

CREATE TABLE "RESERVA_SEMANAL"
(
  "RESERVAID" INTEGER NOT NULL,
  "DATAIN"    DATE NOT NULL,
  "DATAFIM"    DATE NOT NULL,
  "HORAIN"	 TIME NOT NULL,
  "HORAFIM"	 TIME NOT NULL,
  "SEG" SMALLINT DEFAULT 0 NOT NULL CHECK ("SEG" IN (0, 1)),
  "TER" SMALLINT DEFAULT 0 NOT NULL CHECK ("TER" IN (0, 1)),
  "QUA" SMALLINT DEFAULT 0 NOT NULL CHECK ("QUA" IN (0, 1)),
  "QUI" SMALLINT DEFAULT 0 NOT NULL CHECK ("QUI" IN (0, 1)),
  "SEX" SMALLINT DEFAULT 0 NOT NULL CHECK ("SEX" IN (0, 1)),
  "SAB" SMALLINT DEFAULT 0 NOT NULL CHECK ("SAB" IN (0, 1)),
  "DOM" SMALLINT DEFAULT 0 NOT NULL CHECK ("DOM" IN (0, 1)),
  "REVESA" SMALLINT DEFAULT 0 NOT NULL CHECK ("REVESA" IN (0, 1))
);

CREATE TABLE "RESERVA_MENSAL"
(
  "RESERVAID" INTEGER NOT NULL,
  "DATAIN"    DATE NOT NULL,
  "DATAFIM"    DATE NOT NULL,
  "HORAIN"	 TIME NOT NULL,
  "HORAFIM"	 TIME NOT NULL,
  "DIA_S" INT NOT NULL,
  "ORDEM" INT NOT NULL
);

/* Table: SALAS, Owner: SYSDBA */

CREATE TABLE "SALAS" 
(
  "SALAID"	 INTEGER NOT NULL,
  "ANDAR"	 INTEGER,
  "NOME"	 VARCHAR(80),
CONSTRAINT "PKSALAS" PRIMARY KEY ("SALAI")
);

/* Table: USUARIOS, Owner: SYSDBA */

CREATE TABLE "USUARIOS" 
(
  "USUARIOID"	 INTEGER NOT NULL,
  "LOGIN"	 VARCHAR(80) CHARACTER SET ISO8859_1 NOT NULL COLLATE PT_PT,
  "NOME"	 VARCHAR(300) NOT NULL,
  "STYLE"	 VARCHAR(120),
  "SCHEMEID"	 INTEGER,
  "NIVEL"	 INTEGER,
CONSTRAINT "PKUSUARIOS" PRIMARY KEY ("USUARIOID")
);

/* Table: MODELOS, Owner: SYSDBA */

CREATE TABLE MODELOS
(
    "MODELOID"    INTEGER NOT NULL,
    "NOME"        VARCHAR(60) CHARACTER SET ISO8859_1 NOT NULL COLLATE PT_PT,
    "BODY"        BLOB SUB_TYPE TEXT,
    "ITEM"        BLOB SUB_TYPE TEXT,
    "FUNDO"       VARCHAR(60),
    "FUNDOALT"    VARCHAR(60),
    CONSTRAINT "PKMODELOS" PRIMARY KEY("MODELOID")
);

/*  Index definitions for all user tables */

CREATE INDEX "IDXDEL$RESERVASDATA_DEL" ON "DEL$RESERVAS"("DATA_DEL");
CREATE UNIQUE INDEX "IDXDEL$RESERVASSEQ" ON "DEL$RESERVAS"("SEQ");
CREATE UNIQUE INDEX "IDXRESERVASEQ" ON "RESERVAS"("SEQ");
CREATE UNIQUE INDEX "IDXUSUARIO_LOGIN" ON "USUARIOS"("LOGIN");
CREATE UNIQUE INDEX "IDXMODELONOME" ON "MODELOS"("NOME");
CREATE INDEX "IDXRESERVA_SIMPLES" ON "RESERVA_SIMPLES"("DATA", "HORAIN");
CREATE INDEX "IDXRESERVA_SEMANAL_DATA" ON "RESERVA_SEMANAL" ("DATAIN", "DATAFIM");
CREATE INDEX "IDXRESERVA_SEMANAL_HORA" ON "RESERVA_SEMANAL" ("HORAIN", "HORAFIM");
CREATE INDEX "IDXRESERVA_MENSAL_DATA" ON "RESERVA_MENSAL" ("DATAIN", "DATAFIM");
CREATE INDEX "IDXRESERVA_MENSAL_HORA" ON "RESERVA_MENSAL" ("HORAIN", "HORAFIM");

ALTER TABLE "RESERVAS" ADD CONSTRAINT "FKSALAS" FOREIGN KEY ("SALAID") REFERENCES "SALAS" ("SALAID") ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE "RESERVAS" ADD CONSTRAINT "FKUSUARIOS" FOREIGN KEY ("USUARIOID") REFERENCES "USUARIOS" ("USUARIOID") ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE "USUARIOS" ADD CONSTRAINT "FK_SCHEME_USUARIOS" FOREIGN KEY ("SCHEMEID") REFERENCES "COLOR_SCHEME" ("SCHEMEID") ON UPDATE CASCADE ON DELETE SET NULL;
ALTER TABLE "RESERVA_SIMPLES" ADD CONSTRAINT "FKRESERVA_SIMPLES" FOREIGN KEY ("RESERVAID") REFERENCES "RESERVAS" ("RESERVAID") ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE "RESERVA_SEMANAL" ADD CONSTRAINT "FKRESERVA_SEMANAL" FOREIGN KEY ("RESERVAID") REFERENCES "RESERVAS" ("RESERVAID") ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE "RESERVA_MENSAL" ADD CONSTRAINT "FKRESERVA_MENSAL" FOREIGN KEY ("RESERVAID") REFERENCES "RESERVAS" ("RESERVAID") ON UPDATE CASCADE ON DELETE CASCADE;

CREATE GENERATOR "GENRESERVAS";
CREATE GENERATOR "GENUSUARIOS";
CREATE GENERATOR "SEQRESERVAS";
CREATE GENERATOR "GENMODELOS";

/*  Exceptions */

CREATE EXCEPTION "EXPRESERVAHORA" 'JA EXISTE UMA RESERVA NESSE HORARIO';
SET TERM ^ ;

/*  Procedures */

CREATE OR ALTER PROCEDURE GET_RESERVAS_SEMANA (
    START Date,
    ENDDT Date )
RETURNS (
    RESERVAID Integer,
    SALAID Integer,
    DATA Date,
    HORAIN Time,
    HORAFIM Time,
    USUARIOID Integer,
    USUARIO_NOME Varchar(255),
    ASSUNTO Varchar(255),
    DEPTO Varchar(80),
    NOTAS Blob sub_type 1,
    SCHEMEID Integer,
    SEQ Integer,
    TIPO Char)
AS
BEGIN  
    FOR
        SELECT
            R.RESERVAID, R.SALAID, RS.DATA, RS.HORAIN, RS.HORAFIM,
            R.USUARIOID, U.NOME, R.ASSUNTO, R.DEPTO, R.NOTAS, U.SCHEMEID, R.SEQ, 
            R.TIPO
        FROM
            RESERVAS R JOIN USUARIOS U ON
                R.USUARIOID = U.USUARIOID
            JOIN RESERVA_SIMPLES RS ON
                R.RESERVAID = RS.RESERVAID
        WHERE
              RS.DATA BETWEEN :START AND :ENDDT
        ORDER BY
              R.SALAID,
              RS.DATA,
              RS.HORAIN
        INTO
            :RESERVAID, :SALAID, :DATA, :HORAIN, :HORAFIM, :USUARIOID,
            :USUARIO_NOME, :ASSUNTO, :DEPTO, :NOTAS, :SCHEMEID, :SEQ,
            :TIPO
    DO
        SUSPEND; 
END^

CREATE OR ALTER PROCEDURE "CREATE_RESERVA_SIMPLES"
 ( RESERVAID INT,
    SALAID INT,
    USUARIOID INT,
    ASSUNTO VARCHAR(255),
    DEPTO VARCHAR(80),
    NOTAS BLOB SUB_TYPE TEXT,
    DATA DATE,
    HORAIN TIME,
    HORAFIM TIME) 
RETURNS 
 ( OUT_RESERVAID INT, 
   SEQ INT )
AS
    DECLARE VARIABLE I INT;
    DECLARE VARIABLE ID INT;
    DECLARE VARIABLE OLD_TIPO CHAR;
BEGIN
    SELECT FIRST 1
        R.RESERVAID
    FROM
        RESERVAS R JOIN RESERVA_SIMPLES RS ON
            R.RESERVAID = RS.RESERVAID
    WHERE
        (:SALAID = R.SALAID) AND 
        (:DATA = RS.DATA) AND
            (((:HORAIN >= RS.HORAIN) AND (:HORAIN < RS.HORAFIM))
            OR
            ((:HORAFIM > RS.HORAIN) AND (:HORAFIM <= RS.HORAFIM))
            OR
            ((:HORAIN <= RS.HORAIN) AND (:HORAFIM > RS.HORAIN)))
    INTO
        I;

    IF (NOT (I IS NULL OR I = :RESERVAID)) THEN
        EXCEPTION EXPRESERVAHORA; 

    SEQ = GEN_ID(SEQRESERVAS, 1);

    IF ((:RESERVAID IS NULL) OR (:RESERVAID < 0)) THEN  
    BEGIN
        OUT_RESERVAID = GEN_ID(GENRESERVAS, 1);

        INSERT INTO
            RESERVAS (RESERVAID, SALAID, USUARIOID, ASSUNTO, DEPTO, NOTAS, SEQ, TIPO)
        VALUES
            (:OUT_RESERVAID, :SALAID, :USUARIOID, :ASSUNTO, :DEPTO, :NOTAS, :SEQ, 'S');

        INSERT INTO 
            RESERVA_SIMPLES (RESERVAID, DATA, HORAIN, HORAFIM)
        VALUES
            (:OUT_RESERVAID, :DATA, :HORAIN, :HORAFIM);
    END
    ELSE
    BEGIN
        OUT_RESERVAID = :RESERVAID;

        SELECT
            TIPO
        FROM
            RESERVAS
        WHERE
            RESERVAID = :RESERVAID
        INTO
            :OLD_TIPO;

        UPDATE  
            RESERVAS
        SET
            SALAID = :SALAID, 
            USUARIOID = :USUARIOID, 
            ASSUNTO = :ASSUNTO, 
            DEPTO = :DEPTO, 
            NOTAS = :NOTAS, 
            SEQ = :SEQ
        WHERE
            RESERVAID = :RESERVAID;

        IF (OLD_TIPO = 'M') THEN
            DELETE FROM RESERVA_MENSAL WHERE RESERVAID = :RESERVAID;
        ELSE IF (OLD_TIPO = 'W') THEN
            DELETE FROM RESERVA_SEMANAL WHERE RESERVAID = :RESERVAID;

        IF (OLD_TIPO = 'S') THEN
            UPDATE
                RESERVA_SIMPLES
            SET
                DATA = :DATA,
                HORAIN = :HORAIN,
                HORAFIM = :HORAFIM
            WHERE
                RESERVAID = :RESERVAID;
        ELSE
            INSERT INTO 
                RESERVA_SIMPLES (DATA, HORAIN, HORAFIM)
            VALUES
                (:DATA, :HORAIN, :HORAFIM);
    END

    SUSPEND;
END^

CREATE OR ALTER PROCEDURE CREATE_RESERVA_SEMANAL (
    RESERVAID INTEGER,
    SALAID INTEGER,
    USUARIOID INTEGER,
    ASSUNTO VARCHAR(255),
    DEPTO VARCHAR(80),
    NOTAS BLOB SUB_TYPE 1,
    DATAIN DATE,
    DATAFIM DATE,
    HORAIN TIME,
    HORAFIM TIME,
    SEG SMALLINT,
    TER SMALLINT,
    QUA SMALLINT,
    QUI SMALLINT,
    SEX SMALLINT,
    SAB SMALLINT,
    DOM SMALLINT,
    REVESA SMALLINT )
RETURNS (
    OUT_RESERVAID INTEGER,
    SEQ INTEGER )
AS
    DECLARE VARIABLE I INT;
    DECLARE VARIABLE ID INT;
    DECLARE VARIABLE OLD_TIPO CHAR;
BEGIN
    FOR
        SELECT
            EXTRACT(WEEKDAY FROM RS.DATA)
        FROM
            RESERVAS R JOIN RESERVA_SIMPLES RS ON
                R.RESERVAID = RS.RESERVAID
        WHERE
            (:SALAID = R.SALAID) AND 
            ((RS.DATA>= :DATAIN) AND (:DATAFIM IS NULL OR RS.DATA <= :DATAFIM)) AND
                (((:HORAIN >= RS.HORAIN) AND (:HORAIN < RS.HORAFIM))
                OR
                ((:HORAFIM > RS.HORAIN) AND (:HORAFIM <= RS.HORAFIM))
                OR
                ((:HORAIN <= RS.HORAIN) AND (:HORAFIM > RS.HORAIN)))
        INTO
            :I
    DO
    BEGIN
        IF (((NOT :SEG IS NULL) AND :SEG != 0 AND :I = 1) OR
            ((NOT :TER IS NULL) AND :TER != 0 AND :I = 2) OR
            ((NOT :QUA IS NULL) AND :QUA != 0 AND :I = 3) OR
            ((NOT :QUI IS NULL) AND :QUI != 0 AND :I = 4) OR
            ((NOT :SEX IS NULL) AND :SEX != 0 AND :I = 5) OR
            ((NOT :SAB IS NULL) AND :SAB != 0 AND :I = 6) OR
            ((NOT :DOM IS NULL) AND :DOM != 0 AND :I = 0)) THEN
            EXCEPTION EXPRESERVAHORA;
    END

    SEQ = GEN_ID(SEQRESERVAS, 1);

    IF ((:RESERVAID IS NULL) OR (:RESERVAID < 0)) THEN  
    BEGIN
        OUT_RESERVAID = GEN_ID(GENRESERVAS, 1);

        INSERT INTO
            RESERVAS (RESERVAID, SALAID, USUARIOID, ASSUNTO, DEPTO, NOTAS, SEQ, TIPO)
        VALUES
            (:OUT_RESERVAID, :SALAID, :USUARIOID, :ASSUNTO, :DEPTO, :NOTAS, :SEQ, 'W');

        INSERT INTO
            RESERVA_SEMANAL (RESERVAID, DATAIN, DATAFIM, HORAIN, HORAFIM, SEG, TER, 
                                            QUA, QUI, SEX, SAB, DOM, REVESA)
        VALUES (:OUT_RESERVAID, :DATAIN, :DATAFIM, :HORAIN, :HORAFIM, :SEG, :TER, :QUA, 
                        :QUI, :SEX, :SAB, :DOM, :REVESA);
    END
    ELSE
    BEGIN
        OUT_RESERVAID = :RESERVAID;

        SELECT
            TIPO
        FROM
            RESERVAS
        WHERE
            RESERVAID = :RESERVAID
        INTO
            :OLD_TIPO;

        UPDATE
            RESERVAS
        SET
            SALAID = :SALAID, 
            USUARIOID = :USUARIOID, 
            ASSUNTO = :ASSUNTO, 
            DEPTO = :DEPTO, 
            NOTAS = :NOTAS, 
            SEQ = :SEQ
        WHERE
            RESERVAID = :RESERVAID;

        IF (OLD_TIPO = 'M') THEN
            DELETE FROM RESERVA_MENSAL WHERE RESERVAID = :RESERVAID;
        ELSE IF (OLD_TIPO = 'S') THEN
            DELETE FROM RESERVA_SIMPLES WHERE RESERVAID = :RESERVAID;

        IF (OLD_TIPO = 'W') THEN
            UPDATE
                RESERVA_SEMANAL
            SET
                DATAIN = :DATAIN,
                DATAFIM = :DATAFIM,
                HORAIN = :HORAIN,
                HORAFIM = HORAFIM,
                SEG = :SEG,
                TER = :TER,
                QUA = :QUA,
                QUI = :QUI,
                SEX = :SEX,
                SAB = :SAB,
                DOM = :DOM,
                REVESA = :REVESA
            WHERE
                RESERVAID = :OUT_RESERVAID;
        ELSE
            INSERT INTO
                RESERVA_SEMANAL (RESERVAID, DATAIN, DATAFIM, HORAIN, HORAFIM, SEG, TER,
                                                QUA, QUI, SEX, SAB, DOM, REVESA)
            VALUES (:OUT_RESERVAID, :DATAIN, :DATAFIM, :HORAIN, :HORAFIM, :SEG, :TER, :QUA,
                            :QUI, :SEX, :SAB, :DOM, :REVESA);
    END

    SUSPEND;
END^

CREATE OR ALTER PROCEDURE "CREATE_RESERVA_MENSAL"
 ( RESERVAID INT,
    SALAID INT,
    USUARIOID INT,
    ASSUNTO VARCHAR(255),
    DEPTO VARCHAR(80),
    NOTAS BLOB SUB_TYPE TEXT,
    DATAIN DATE,
    DATAFIM DATE,
    HORAIN TIME,
    HORAFIM TIME,
    DIA_S INTEGER,
    ORDEM INTEGER) 
RETURNS 
 ( OUT_RESERVAID INT,
   SEQ INT )
AS
BEGIN
END^

/* Triggers only will work for SQL triggers */

CREATE TRIGGER "TRIG_UPD_RESERVA" FOR "RESERVAS" 
ACTIVE BEFORE INSERT OR UPDATE OR DELETE POSITION 0
AS 
BEGIN 
	IF (UPDATING OR INSERTING) THEN
		NEW.SEQ = GEN_ID(SEQRESERVAS, 1);
	ELSE
	BEGIN
		DELETE FROM
			DEL$RESERVAS D
		WHERE 
			D.DATA_DEL < CURRENT_DATE;
	
		INSERT INTO DEL$RESERVAS ("RESERVAID", "SEQ")
		VALUES (OLD.RESERVAID, GEN_ID(SEQRESERVAS, 1));
	END
END
 ^

CREATE TRIGGER "TRIG_EVT_RESERVA" FOR "RESERVAS" 
ACTIVE AFTER INSERT OR UPDATE OR DELETE POSITION 0
AS 
BEGIN 
	IF (INSERTING) THEN
	BEGIN
		POST_EVENT 'reserva_ins';
	END
	ELSE IF (UPDATING) THEN
	BEGIN
		POST_EVENT 'reserva_upd';
	END
	ELSE IF (DELETING) THEN
	BEGIN
		POST_EVENT 'reserva_del';
	END
END
 ^

COMMIT WORK ^
SET TERM ;^

/* Grant Roles for this database */

/* Grant permissions for this database */
GRANT ALL ON "COLOR_SCHEME" TO RS;
GRANT ALL ON "DEL$RESERVAS" TO RS;
GRANT ALL ON "RESERVAS" TO RS;
GRANT ALL ON "SALAS" TO RS;
GRANT ALL ON "USUARIOS" TO RS;
GRANT ALL ON "MODELOS" TO RS;
GRANT EXECUTE ON PROCEDURE "GET_RESERVAS_SEMANA" TO RS;
GRANT EXECUTE ON PROCEDURE "CREATE_RESERVA_SIMPLES" TO RS;

COMMIT WORK;
